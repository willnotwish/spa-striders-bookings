# This files goes in /etc/nginx/conf.d

# The upstream definitions use the host name ("bookings") defined in the docker-compose file
upstream rails_app {
  server bookings:3000;
}

log_format debugging '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status. Headers are Host: $http_host, X-Forwarded-Proto: $http_x_forwarded_proto, X-Real-IP: $http_x_real_ip, X-Forwarded-For: $http_x_forwarded_for';

access_log  /var/log/nginx/access.log debugging;

# Default, catch-all server
server {

  listen 80 default_server;

  server_name _; # This is just an invalid value which will never trigger on a real hostname.

  root   /var/www/html;
  index  index.html;


  client_max_body_size 6M;

  # Deny requests for files that should never be accessed
  location ~ /\. {
    deny all;
  }

  location ~* ^.+\.(rb|log)$ {
    deny all;
  }

  # Serve static assets directly if they exist
  location ~ ^/(assets|images|javascripts|stylesheets|system|packs|book)/ {
    try_files $uri
              @rails_upstream;

    access_log off;
    gzip_static on; # to serve pre-gzipped version

    expires max;
    add_header Cache-Control public;

    # Some browsers still send conditional-GET requests if there's a
    # Last-Modified header or an ETag header even if they haven't
    # reached the expiry date sent in the Expires header.
    add_header Last-Modified "";
    add_header ETag "";
    break;
  }

  # Members upstream
  location / {
    try_files /system/maintenance.html
              $uri
              @rails_upstream;
  }

  location @rails_upstream {
    # The X-Forwarded-Proto header is one of the headers that rack (upstream) uses as its "scheme" parameter to construct
    # the base url from the component parts of the request. It does this to mitigate against CSRF attacks.
    # X-Forwarded-Proto seems to be the de facto standard for reverse proxies.
    # Previously, I set this to $scheme, which was http or https depending on the URL in the browser.
    # In this case, however, this proxy is designed to be upstream of another which handles SSL.
    # So what we need to pass upstream is the protocol used in communication with the SSL proxy,
    # not with this one. This scheme is already stored in the $http_x_forwarded_proto variable.
    proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;

    proxy_set_header X-Real-IP  $http_x_real_ip;
    proxy_set_header X-Forwarded-For $http_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_max_temp_file_size 0;
    proxy_pass http://rails_app;
  }
}
